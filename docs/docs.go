// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/wetor/AnimeGo",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://www.mit-license.org/"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/config": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "将待下载项组合成rss发送给AnimeGo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "获取设置",
                "parameters": [
                    {
                        "type": "string",
                        "default": "all",
                        "description": "Key 使用目录方式获取指定yaml key内容\n  [暂不支持] 如 setting/save_path, advanced/download/queue_max_num\n  all 获取所有配置项，json格式\n  raw 获取所有配置项，yaml文本格式\n  comment 获取所有配置项的注释文本",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ConfigResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "300": {
                        "description": "Multiple Choices",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/plugin/config": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "从AnimeGo中获取当前插件的配置\n插件名为不包含 'plugin' 的路径\n插件名可以忽略'.js'后缀；插件名也可以使用上层文件夹名，会自动寻找文件夹内部的 'main.js' 或 'plugin.js'\n如传入 'test'，会依次尝试寻找 'plugin/test/main.js', 'plugin/test/plugin.js', 'plugin/test.js'",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugin"
                ],
                "summary": "获取插件配置",
                "parameters": [
                    {
                        "type": "string",
                        "description": "插件信息",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "300": {
                        "description": "Multiple Choices",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "将当前插件的配置发送给AnimeGo并保存\n插件名为不包含 'plugin' 的路径\n插件名可以忽略'.js'后缀；插件名也可以使用上层文件夹名，会自动寻找文件夹内部的 'main.js' 或 'plugin.js'\n如传入 'test'，会依次尝试寻找 'plugin/test/main.js', 'plugin/test/plugin.js', 'plugin/test.js'",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugin"
                ],
                "summary": "发送插件配置",
                "parameters": [
                    {
                        "description": "插件信息，data为base64编码后的json文本",
                        "name": "plugin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PluginConfigUploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "300": {
                        "description": "Multiple Choices",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/rss": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "将待下载项组合成rss发送给AnimeGo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plugin"
                ],
                "summary": "发送下载项",
                "parameters": [
                    {
                        "description": "组合的rss信息",
                        "name": "rss",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SelectEpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "300": {
                        "description": "Multiple Choices",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Pong",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web"
                ],
                "summary": "Ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/sha256": {
            "get": {
                "description": "SHA256计算",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "web"
                ],
                "summary": "SHA256计算",
                "parameters": [
                    {
                        "type": "string",
                        "description": "原文本",
                        "name": "access_key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "configs.Config": {
            "type": "object",
            "properties": {
                "cache": {
                    "type": "object",
                    "properties": {
                        "bangumi_cache_hour": {
                            "type": "integer"
                        },
                        "mikan_cache_hour": {
                            "type": "integer"
                        },
                        "themoviedb_cache_hour": {
                            "type": "integer"
                        }
                    }
                },
                "category": {
                    "type": "string"
                },
                "client": {
                    "type": "object",
                    "properties": {
                        "check_time_second": {
                            "type": "integer"
                        },
                        "connect_timeout_second": {
                            "type": "integer"
                        },
                        "retry_connect_num": {
                            "type": "integer"
                        }
                    }
                },
                "data_path": {
                    "type": "string"
                },
                "default": {
                    "type": "object",
                    "properties": {
                        "tmdb_fail_skip": {
                            "type": "boolean"
                        },
                        "tmdb_fail_use_first_season": {
                            "type": "boolean"
                        },
                        "tmdb_fail_use_title_season": {
                            "type": "boolean"
                        }
                    }
                },
                "download": {
                    "type": "object",
                    "properties": {
                        "allow_duplicate_download": {
                            "type": "boolean"
                        },
                        "ignore_size_max_kb": {
                            "type": "integer"
                        },
                        "queue_delay_second": {
                            "type": "integer"
                        },
                        "queue_max_num": {
                            "type": "integer"
                        },
                        "rename": {
                            "type": "string"
                        },
                        "seeding_time_minute": {
                            "type": "integer"
                        }
                    }
                },
                "download_path": {
                    "type": "string"
                },
                "feed": {
                    "type": "object",
                    "properties": {
                        "delay_second": {
                            "type": "integer"
                        },
                        "multi_goroutine": {
                            "type": "object",
                            "properties": {
                                "enable": {
                                    "type": "boolean"
                                },
                                "goroutine_max": {
                                    "type": "integer"
                                }
                            }
                        },
                        "update_delay_minute": {
                            "type": "integer"
                        }
                    }
                },
                "filter": {
                    "type": "object",
                    "properties": {
                        "javascript": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "key": {
                    "type": "object",
                    "properties": {
                        "themoviedb": {
                            "type": "string"
                        }
                    }
                },
                "path": {
                    "type": "object",
                    "properties": {
                        "db_file": {
                            "type": "string"
                        },
                        "log_file": {
                            "type": "string"
                        },
                        "temp_path": {
                            "type": "string"
                        }
                    }
                },
                "proxy": {
                    "type": "object",
                    "properties": {
                        "enable": {
                            "type": "boolean"
                        },
                        "url": {
                            "type": "string"
                        }
                    }
                },
                "request": {
                    "type": "object",
                    "properties": {
                        "retry_num": {
                            "type": "integer"
                        },
                        "retry_wait_second": {
                            "type": "integer"
                        },
                        "timeout_second": {
                            "type": "integer"
                        }
                    }
                },
                "save_path": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "update_delay_second": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                },
                "webapi": {
                    "type": "object",
                    "properties": {
                        "access_key": {
                            "type": "string"
                        },
                        "host": {
                            "type": "string"
                        },
                        "port": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "models.ConfigResponse": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/configs.Config"
                },
                "data": {
                    "type": "string"
                }
            }
        },
        "models.PluginConfigUploadRequest": {
            "type": "object",
            "required": [
                "data",
                "name"
            ],
            "properties": {
                "data": {
                    "description": "base64格式的文本数据",
                    "type": "string"
                },
                "name": {
                    "description": "插件文件名",
                    "type": "string"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.SelectEpRequest": {
            "type": "object",
            "required": [
                "rss",
                "source"
            ],
            "properties": {
                "ep_links": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_select_ep": {
                    "type": "boolean",
                    "default": false
                },
                "rss": {
                    "type": "object",
                    "required": [
                        "url"
                    ],
                    "properties": {
                        "url": {
                            "type": "string"
                        }
                    }
                },
                "source": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Access-Key",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
