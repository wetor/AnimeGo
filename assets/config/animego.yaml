# 名词解释
# ep: episode，剧集，第几集

feed:
  rss:
    # Mikan Project(mikanani.me)订阅信息
    mikan:
      name: Mikan Project
      url: https://mikanani.me/RSS/MyBangumi?token=111
client:
  # qBittorrent客户端信息
  qbittorrent:
    url: http://localhost:8080
    username: admin
    password: adminadmin
key:
  # TheMovieDB APIkey，申请链接（需注册）：https://www.themoviedb.org/settings/api?language=zh-CN
  themoviedb: 111
# 常规设置
setting:
  # 额外数据存储路径。如在Docker中部署，以下路径需要为挂载后的Docker内路径
  data_path: data
  # 下载保存位置。如在Docker中部署，以下路径需要为挂载后的Docker内路径
  save_path: /root/download
  # 临时文件保存位置。相对于data_path的路径
  temp_path: temp
  # 日志文件保存位置。
  log_file: log/debug.log
  # 缓存数据存储路径。相对于data_path的路径
  db_file: cache/bolt.db
  # 分类名
  category: test
  # 标签表达式
  # 可用通配符列表：
  #   - {year} int 番剧更新年
  #   - {quarter} int 番剧季度月号，取值为[4, 7, 10, 1]分别对应[春, 夏, 秋, 冬]季番剧
  #   - {quarter_index} int 番剧季度序号，取值为[1, 2, 3, 4]分别对应春(4月)、夏(7月)、秋(10月)、冬(1月)季番剧
  #   - {quarter_name} string 番剧季度名，取值为[春, 夏, 秋, 冬]
  #   - {ep} int 番剧当前剧集序号，从1开始
  #   - {week} int 番剧更新星期数，取值为[1, 2, 3, 4, 5, 6, 7]
  #   - {week_name} string 番剧更新星期名，取值为[星期一, 星期二, 星期三, 星期四, 星期五, 星期六, 星期日]
  tag: "{year}年{quarter}月新番"
  # 代理设置
  proxy:
    enable: false
    # 支持http和socks5代理
    url: http://127.0.0.1:7890
  # 过滤设置，用来在下载前根据文件名判断是否需要下载
  # 目前过滤仅支持javascript脚本过滤器，具体编写规则参考脚本文档
  filter:
    javascript: plugin/filter/default.js
  # WebApi设置
  webapi:
    # 请求秘钥，为空则不需要验证
    key:
    # 服务的host和端口设置
    host: localhost
    port: 7991
# 高级设置，主要为一些细节设置，请勿随意修改
advanced:
  # 下载器Client高级设置
  client:
    # 连接超时时间
    connect_timeout_second: 3
    # 重试次数，为0则表示无限重试
    retry_connect_num: 0
  # 主程序高级设置
  main:
    # 更新状态等待时间
    # 每隔这一段时间，都会更新一次下载进度、清空下载队列(添加到下载项)
    # 等待过程是异步的，等待期间不影响操作
    # 在下载项较多、等待时间过少时会出现请求超时，所以有个最小等待时间为2秒的限制
    # 默认为10，最小值为2；若小于2，实际等待时间会为2
    update_delay_second: 2
    # 从下载队列中，添加下载项间隔时间
    # 默认为5
    download_queue_delay_second: 3
    # 下载队列最大容量
    # 新增下载任务后，不会第一时间开始下载，而是放入队列中
    # 当队列满，添加下载操作会阻塞
    # 下载队列下载项时，每一项都会间隔 download_queue_delay_second 时间添加到下载客户端中
    # 默认为20
    download_queue_max_num: 20
    # 允许重复下载同剧集不同资源，相同资源无法重复下载
    # 默认不允许同样的剧集重复下载
    allow_duplicate_download: false
    # 下载完成后做种时间，单位分钟，为0则不做种
    seeding_time_minute: 30
    # 忽略种子中小于此大小的文件
    ignore_size_max_kb: 1024
    # 订阅刷新时间，每隔这个时间重新下载一遍订阅
    # 默认10分钟，最小2分钟
    feed_update_delay_minute: 10
    # 解析订阅每个条目中间隔时间，防止过多请求被禁止访问，单位秒。多协程同样支持
    # 默认为1，即每完成一个条目的解析等待一秒后解析下一个
    feed_delay_second: 1
    # 解析Rss多协程设置。
    # 启用后可以显著提高首次或强制Rss解析速度，同时会导致输出Log日志顺序紊乱
    multi_goroutine:
      # 是否启用
      enable: false
      # 最大协程数量。默认为4，为0则同时解析所有Rss条目
      goroutine_max: 4
    # HTTP请求超时，默认3秒
    http_timeout_second: 5
    # HTTP请求失败重试次数，默认3次
    http_retry_num: 3




