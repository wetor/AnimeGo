# 名词解释
# ep: episode，剧集，第几集

feed:
  rss:
    # Mikan Project(mikanani.me)订阅信息
    mikan:
      name: Mikan Project
      url: https://mikanani.me/RSS/MyBangumi?token=****
client:
  # qBittorrent客户端信息
  qbittorrent:
    url: http://localhost:8080
    username: admin
    password: adminadmin
key:
  # TheMovieDB APIkey，申请链接（需注册）：https://www.themoviedb.org/settings/api?language=zh-CN
  themoviedb: ****
proxy:
  enable: false
  # 支持http和socks5代理
  url: http://127.0.0.1:7890
setting:
  # 额外数据存储路径。如在Docker中部署，以下路径需要为挂载后的Docker内路径
  data_path: ./data
  # 缓存数据存储路径。如在Docker中部署，以下路径需要为挂载后的Docker内路径
  cache_path: ./data/cache
  # 下载保存位置。如在Docker中部署，以下路径需要为挂载后的Docker内路径
  save_path: ./data/download
  # 分类名
  category: test
  # 标签表达式
  # 可用通配符列表：
  #   - {year} int 番剧更新年
  #   - {quarter} int 番剧季度月号，取值为[4, 7, 10, 1]分别对应[春, 夏, 秋, 冬]季番剧
  #   - {quarter_index} int 番剧季度序号，取值为[1, 2, 3, 4]分别对应春(4月)、夏(7月)、秋(10月)、冬(1月)季番剧
  #   - {quarter_name} string 番剧季度名，取值为[春, 夏, 秋, 冬]
  #   - {ep} int 番剧当前剧集序号，从1开始
  #   - {week} int 番剧更新星期数，取值为[1, 2, 3, 4, 5, 6, 7]
  #   - {week_name} string 番剧更新星期名，取值为[星期一, 星期二, 星期三, 星期四, 星期五, 星期六, 星期日]
  tag: "{year}年{quarter}月新番"

# 高级设置，主要为一些细节设置，请勿随意修改
advanced:
  # 下载器Client高级设置
  client:
    # 连接超时时间
    connect_timeout_second: 3
    # 重试次数，为0则表示无限重试
    retry_connect_num: 0
  # 主程序高级设置
  main:
    # 更新状态等待时间
    # 每隔这一段时间，都会更新一次下载进度、清空下载队列(添加到下载项)
    # 等待过程是异步的，等待期间不影响操作
    # 在下载项较多、等待时间过少时会出现请求超时，所以有个最小等待时间为2秒的限制
    # 默认为10，最小值为2；若小于2，实际等待时间会为2
    update_delay_second: 2
    # 从下载队列中，添加下载项间隔时间
    # 默认为5
    download_queue_delay_second: 5
    # 下载队列最大容量
    # 新增下载任务后，不会第一时间开始下载，而是放入队列中
    # 当队列满，或者达到下一次的 update_delay_second 刷新时间，将会依次下载队列中的下载项
    # 下载队列下载项时，每一项都会间隔 download_queue_delay_second 时间添加到下载客户端中
    # 下载队列下载是异步的，不会阻塞主线程，此时仍然可以添加下载任务到队列中
    # 默认为10，如需要下载项马上添加到下载列表，可以设置为1
    download_queue_max_num: 10
    # 允许重复下载同剧集不同资源，相同资源无法重复下载
    # 默认不允许同样的剧集重复下载
    allow_duplicate_download: false
    # 下载完成后做种时间，单位分钟，为0则不做种
    seeding_time_minute: 30
    # 忽略种子中小于此大小的文件
    ignore_size_max_kb: 1024
    # 订阅刷新时间，每隔这个时间重新下载一遍订阅
    # 默认10分钟，最小2分钟
    feed_update_delay_minute: 10
    # 解析订阅每个条目中间隔时间，防止过多请求被禁止访问，单位秒。多协程同样支持
    # 默认为1，即每完成一个条目的解析等待一秒后解析下一个
    feed_delay_second: 1
    # 解析Rss多协程设置。
    # 启用后可以显著提高首次或强制Rss解析速度，同时会导致输出Log日志顺序紊乱
    multi_goroutine:
      # 是否启用
      enable: false
      # 最大协程数量。默认为4，为0则同时解析所有Rss条目
      goroutine_max: 4
  # Bangumi高级设置
  bangumi:
    # Api域名
    host: https://api.bgm.tv
    # 匹配当前ep信息时，额外获取的前、后集信息数量
    # 默认值为1，则每次获取3集信息，即[ep-1,ep+1]集的信息，之后使用match_ep_days匹配
    match_ep_range: 1
    # 匹配当前ep信息时，在ep数匹配的情况下，资源发布时间与当前ep的更新时间允许的差值绝对值，单位为天
    # 默认值为30，即番剧更新后，30天的发布的资源符合条件
    match_ep_days: 30
    # 番剧信息缓存过期时间，单位秒，为0则永不过期
    # 默认值为604800，即7*24*60*60，7天
    cache_info_expire_second: 604800
    # 番剧ep信息缓存过期时间，单位秒，为0则永不过期
    # 默认值为604800，即7*24*60*60，7天
    cache_ep_expire_second: 604800
  # TheMovieDB高级设置
  themoviedb:
    # Api域名
    host: https://api.themoviedb.org
    # 匹配当前番剧季度信息时，番剧当前季度开播时间与tmdb中对应季度开播时间允许误差天数
    # 默认值为90，即当前番剧最接近的开播时间小于90天，认为是同一季度
    match_season_days: 90
    # 番剧Tmdb ID缓存过期时间，单位秒，为0则永不过期
    # 默认值为0，即永不过期
    cache_id_expire_second: 0
    # 番剧季度信息缓存过期时间，单位秒，为0则永不过期
    # 默认值为604800，即30*24*60*60，30天
    cache_season_expire_second: 2592000
  # Mikan高级设置
  mikan:
    # 域名
    host: https://mikanani.me
    # 番剧Mikan ID缓存过期时间，单位秒，为0则永不过期
    # 默认值为0，即永不过期
    cache_id_expire_second: 0
    # 番剧Bangumi ID缓存过期时间，单位秒，为0则永不过期
    # 默认值为0，即永不过期
    cache_bangumi_expire_second: 0



